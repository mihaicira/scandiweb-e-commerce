{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\scandiwebproject\\\\clothesshop\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'https://48p1r2roz4.sse.codesandbox.io',\n  cache: new InMemoryCache()\n});\nconst EXCHANGE_RATES = gql`\n    query GetExchangeRates {\n        Product(currency: \"USD\") {\n            currency\n            rate\n        }\n    }\n`;\n\nfunction ExchangeRates() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(EXCHANGE_RATES);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  return data.rates.map(({\n    currency,\n    rate\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [currency, \": \", rate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, currency, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this));\n}\n\n_s(ExchangeRates, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ExchangeRates;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My first Apollo app \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExchangeRates, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExchangeRates\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["D:/react/scandiwebproject/clothesshop/src/index.js"],"names":["React","ReactDOM","reportWebVitals","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","cache","EXCHANGE_RATES","ExchangeRates","loading","error","data","rates","map","currency","rate","App","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,QAJJ,EAKIC,GALJ,QAMO,gBANP;;AAQA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC5BM,EAAAA,GAAG,EAAE,uCADuB;AAE5BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFqB,CAAjB,CAAf;AAKA,MAAMO,cAAc,GAAGJ,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASK,aAAT,GAAyB;AAAA;;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACK,cAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,SAAOC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,kBAClB;AAAA,2BACI;AAAA,iBACKD,QADL,QACiBC,IADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAAUD,QAAV;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAOH;;GAbQN,a;UAC4BN,Q;;;KAD5BM,a;;AAgBT,SAASQ,GAAT,GAAe;AACX,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;MAPQA,G;AASTnB,QAAQ,CAACoB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACI,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEb,MAAxB;AAAA,2BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADF,EAMEc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACArB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    useQuery,\n    gql\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n    uri: 'https://48p1r2roz4.sse.codesandbox.io',\n    cache: new InMemoryCache()\n});\n\nconst EXCHANGE_RATES = gql`\n    query GetExchangeRates {\n        Product(currency: \"USD\") {\n            currency\n            rate\n        }\n    }\n`;\n\nfunction ExchangeRates() {\n    const { loading, error, data } = useQuery(EXCHANGE_RATES);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return data.rates.map(({ currency, rate }) => (\n        <div key={currency}>\n            <p>\n                {currency}: {rate}\n            </p>\n        </div>\n    ));\n}\n\n\nfunction App() {\n    return (\n        <div>\n            <h2>My first Apollo app ðŸš€</h2>\n            <ExchangeRates />\n        </div>\n    );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n      <ApolloProvider client={client}>\n          <App/>\n      </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}