{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\scandiwebproject\\\\clothesshop\\\\src\\\\product\\\\ProductPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport './style.css';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction beautifyName(name) {\n  //removes dashes from name, adds uppercase to first letter of each word\n  var newName = name[0].toUpperCase();\n\n  for (let i = 1; i < name.length; i++) {\n    if (name[i] === '-' && i !== name.length - 1) {\n      newName += \" \";\n      newName += name[i + 1].toUpperCase();\n      i += 1;\n    } else newName += name[i];\n  }\n\n  return newName;\n}\n\nfunction transformPrice(pricesArray, currentCurrency) {\n  //renders the right prace for an object, based on its array of prices\n  var Price = \"\";\n  var found = false;\n  pricesArray.forEach(price => {\n    if (price.currency === currentCurrency) {\n      Price += price.currency + price.amount;\n      found = true;\n    }\n  });\n  if (!found) return \"currency-not-found-in-database\";else {\n    Price = Price.replace(\"EUR\", \"€\");\n    Price = Price.replace(\"USD\", \"$\");\n    Price = Price.replace(\"JPY\", \"¥\");\n    return Price;\n  }\n}\n\nconst testQuery = gql`query getProduct{\n    category(input:{\n        title: \"clothes\",\n    }){\n        products{\n            prices{\n                currency\n                amount\n            },\n            category,\n            description,\n            attributes{\n                id,\n                items{\n                    displayValue,\n                    value,\n                    id\n                }\n            }\n            gallery,\n            id,\n            inStock\n        }\n    }  }`;\n\nconst ProductFromDatabase = props => {\n  _s();\n\n  const [productName, setProductName] = useState(\"n/a\");\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(testQuery);\n  const URL = window.location.search.substring(1);\n  var PRODUCT = null;\n  console.log(\"Data: \", data);\n  data.category.products.forEach(product => {\n    if (product.id === URL) {\n      PRODUCT = product; // props.setProductName(product.id)\n      // props.setPrice(transformPrice(product.prices,props.currentCurrency))\n      // props.setMainGallery(product.gallery[0])\n      // props.setGalleryLinks(product.gallery)\n      // document.getElementsByClassName(\"description-container\")[0].innerHTML = product.description\n      // product.gallery.forEach((photo)=>{\n      //     sideGallery.push(<img src={photo}/>)\n    }\n  });\n  setProductName(PRODUCT.id);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 12\n  }, this); // <>\n  //     <section id=\"page-product\">\n  //         <div className=\"product-gallery-container\">\n  //             <div className=\"side-gallery\">\n  //                 {/*<GetProductGallery*/}\n  //                 {/*    setProductName={setProductName}*/}\n  //                 {/*    setMainGallery={setMainGallery}*/}\n  //                 {/*    mainGallery={mainGallery}*/}\n  //                 {/*    galleryLinks={galleryLinks}*/}\n  //                 {/*    setGalleryLinks={setGalleryLinks}*/}\n  //                 {/*    setPrice={setPrice}*/}\n  //                 {/*    currentCurrency={props.currentCurrency}*/}\n  //                 {/*    setDescription={setDescription}*/}\n  //                 {/*/>*/}\n  //             </div>\n  //\n  //             <div className=\"main-gallery\">\n  //                 {/*<img src={mainGallery}/>*/}\n  //             </div>\n  //         </div>\n  //\n  //         <div className=\"product-options-container\">\n  //\n  //             <div className=\"product-name\">\n  //                 <h2>{beautifyName(productName)}</h2>\n  //                 {/*<h3>{brand}</h3>*/}\n  //             </div>\n  //\n  //             <div className=\"size-container\">\n  //                 SIZE:\n  //                 <div className=\"size-boxes\">\n  //                     {/*<button className={\"button\" + (selectedSize===0 ? \" selected\" : \"\")} disabled onClick={()=>{selectSize(0)}}>XS</button>*/}\n  //                     {/*<button className={\"button\" + (selectedSize===1 ? \" selected\" : \"\")} onClick={()=>{selectSize(1)}}>S</button>*/}\n  //                     {/*<button className={\"button\" + (selectedSize===2 ? \" selected\" : \"\")} onClick={()=>{selectSize(2)}}>M</button>*/}\n  //                     {/*<button className={\"button\" + (selectedSize===3 ? \" selected\" : \"\")} onClick={()=>{selectSize(3)}}>L</button>*/}\n  //                 </div>\n  //             </div>\n  //\n  //             <div className=\"price-container\">\n  //                 PRICE:\n  //                 {/*<p>{price}</p>*/}\n  //\n  //             </div>\n  //\n  //             <div className=\"addToCartBtn\">\n  //                 <button className=\"button\">ADD TO CART</button>\n  //             </div>\n  //\n  //             <div className=\"description-container\">\n  //             </div>\n  //         </div>\n  //     </section>\n  //     </>\n};\n\n_s(ProductFromDatabase, \"kV+qKwkcmFLhMiW4cPeckHEYtd4=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductFromDatabase;\n\nconst ProductPage = props => {\n  // const [sideGallery,setSideGallery] = useState([])\n  // const [mainGallery,setMainGallery] = useState(\"n/a\")\n  // const [galleryLinks,setGalleryLinks] = useState([])\n  // const [productName,setProductName] = useState(\"n/a\")\n  // const [brand,setBrand] = useState(\"no-brand-in-queries\")\n  // const [price,setPrice] = useState(\"n/a\")\n  // const [description,setDescription] = useState(\"n/a\")\n  // const [selectedSize,selectSize] = useState(\"1\")\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ProductFromDatabase, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = ProductPage;\nexport default ProductPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductFromDatabase\");\n$RefreshReg$(_c2, \"ProductPage\");","map":{"version":3,"sources":["D:/react/scandiwebproject/clothesshop/src/product/ProductPage.js"],"names":["React","Component","useState","useEffect","useQuery","gql","beautifyName","name","newName","toUpperCase","i","length","transformPrice","pricesArray","currentCurrency","Price","found","forEach","price","currency","amount","replace","testQuery","ProductFromDatabase","props","productName","setProductName","loading","error","data","URL","window","location","search","substring","PRODUCT","console","log","category","products","product","id","ProductPage"],"mappings":"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","sourcesContent":["import React, {Component,useState,useEffect} from \"react\";\r\n\r\nimport './style.css'\r\nimport {\r\n    useQuery,\r\n    gql\r\n} from \"@apollo/client\";\r\n\r\nfunction beautifyName(name){\r\n    //removes dashes from name, adds uppercase to first letter of each word\r\n    var newName = name[0].toUpperCase()\r\n    for(let i = 1 ; i < name.length ; i++){\r\n        if(name[i] === '-' && i !== name.length-1){\r\n            newName += \" \"\r\n            newName += name[i+1].toUpperCase()\r\n            i+=1\r\n        }\r\n        else\r\n            newName += name[i]\r\n    }\r\n    return newName\r\n}\r\n\r\nfunction transformPrice(pricesArray,currentCurrency) {\r\n    //renders the right prace for an object, based on its array of prices\r\n    var Price = \"\"\r\n    var found = false;\r\n    pricesArray.forEach((price) => {\r\n        if (price.currency === currentCurrency) {\r\n            Price += price.currency + price.amount\r\n            found = true;\r\n        }\r\n\r\n    })\r\n    if (!found)\r\n        return \"currency-not-found-in-database\"\r\n    else {\r\n        Price = Price.replace(\"EUR\", \"€\")\r\n        Price = Price.replace(\"USD\", \"$\")\r\n        Price = Price.replace(\"JPY\", \"¥\")\r\n        return Price\r\n    }\r\n}\r\n\r\nconst testQuery = gql`query getProduct{\r\n    category(input:{\r\n        title: \"clothes\",\r\n    }){\r\n        products{\r\n            prices{\r\n                currency\r\n                amount\r\n            },\r\n            category,\r\n            description,\r\n            attributes{\r\n                id,\r\n                items{\r\n                    displayValue,\r\n                    value,\r\n                    id\r\n                }\r\n            }\r\n            gallery,\r\n            id,\r\n            inStock\r\n        }\r\n    }  }`\r\n\r\nconst ProductFromDatabase = (props)=>{\r\n    const [productName,setProductName] = useState(\"n/a\")\r\n\r\n    const {loading, error, data} = useQuery(testQuery)\r\n    const URL = window.location.search.substring(1)\r\n\r\n    var PRODUCT = null\r\n    console.log(\"Data: \",data)\r\n    data.category.products.forEach((product)=>{\r\n        if(product.id === URL){\r\n            PRODUCT = product\r\n            // props.setProductName(product.id)\r\n            // props.setPrice(transformPrice(product.prices,props.currentCurrency))\r\n            // props.setMainGallery(product.gallery[0])\r\n            // props.setGalleryLinks(product.gallery)\r\n            // document.getElementsByClassName(\"description-container\")[0].innerHTML = product.description\r\n            // product.gallery.forEach((photo)=>{\r\n            //     sideGallery.push(<img src={photo}/>)\r\n        }\r\n    })\r\n    setProductName(PRODUCT.id)\r\n\r\n\r\n    return <p>hello</p>\r\n    // <>\r\n    //     <section id=\"page-product\">\r\n    //         <div className=\"product-gallery-container\">\r\n    //             <div className=\"side-gallery\">\r\n    //                 {/*<GetProductGallery*/}\r\n    //                 {/*    setProductName={setProductName}*/}\r\n    //                 {/*    setMainGallery={setMainGallery}*/}\r\n    //                 {/*    mainGallery={mainGallery}*/}\r\n    //                 {/*    galleryLinks={galleryLinks}*/}\r\n    //                 {/*    setGalleryLinks={setGalleryLinks}*/}\r\n    //                 {/*    setPrice={setPrice}*/}\r\n    //                 {/*    currentCurrency={props.currentCurrency}*/}\r\n    //                 {/*    setDescription={setDescription}*/}\r\n    //                 {/*/>*/}\r\n    //             </div>\r\n    //\r\n    //             <div className=\"main-gallery\">\r\n    //                 {/*<img src={mainGallery}/>*/}\r\n    //             </div>\r\n    //         </div>\r\n    //\r\n    //         <div className=\"product-options-container\">\r\n    //\r\n    //             <div className=\"product-name\">\r\n    //                 <h2>{beautifyName(productName)}</h2>\r\n    //                 {/*<h3>{brand}</h3>*/}\r\n    //             </div>\r\n    //\r\n    //             <div className=\"size-container\">\r\n    //                 SIZE:\r\n    //                 <div className=\"size-boxes\">\r\n    //                     {/*<button className={\"button\" + (selectedSize===0 ? \" selected\" : \"\")} disabled onClick={()=>{selectSize(0)}}>XS</button>*/}\r\n    //                     {/*<button className={\"button\" + (selectedSize===1 ? \" selected\" : \"\")} onClick={()=>{selectSize(1)}}>S</button>*/}\r\n    //                     {/*<button className={\"button\" + (selectedSize===2 ? \" selected\" : \"\")} onClick={()=>{selectSize(2)}}>M</button>*/}\r\n    //                     {/*<button className={\"button\" + (selectedSize===3 ? \" selected\" : \"\")} onClick={()=>{selectSize(3)}}>L</button>*/}\r\n    //                 </div>\r\n    //             </div>\r\n    //\r\n    //             <div className=\"price-container\">\r\n    //                 PRICE:\r\n    //                 {/*<p>{price}</p>*/}\r\n    //\r\n    //             </div>\r\n    //\r\n    //             <div className=\"addToCartBtn\">\r\n    //                 <button className=\"button\">ADD TO CART</button>\r\n    //             </div>\r\n    //\r\n    //             <div className=\"description-container\">\r\n    //             </div>\r\n    //         </div>\r\n    //     </section>\r\n    //     </>\r\n}\r\n\r\n\r\nconst ProductPage = (props)=>{\r\n\r\n    // const [sideGallery,setSideGallery] = useState([])\r\n    // const [mainGallery,setMainGallery] = useState(\"n/a\")\r\n    // const [galleryLinks,setGalleryLinks] = useState([])\r\n    // const [productName,setProductName] = useState(\"n/a\")\r\n    // const [brand,setBrand] = useState(\"no-brand-in-queries\")\r\n    // const [price,setPrice] = useState(\"n/a\")\r\n    // const [description,setDescription] = useState(\"n/a\")\r\n\r\n    // const [selectedSize,selectSize] = useState(\"1\")\r\n\r\n\r\n\r\n    return(<>\r\n        <ProductFromDatabase/>\r\n\r\n        </>)\r\n}\r\n\r\nexport default ProductPage"]},"metadata":{},"sourceType":"module"}