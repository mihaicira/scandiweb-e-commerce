{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\scandiwebproject\\\\clothesshop\\\\src\\\\catalog\\\\Catalog.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport \"./style.css\";\nimport Product from \"./Product\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst clothesCategoryQuery = gql`query GetCategoryProducts{\n    category(input:{\n        title: \"clothes\",\n    }){\n        products{\n            prices{\n                currency\n                amount\n            },\n            gallery,\n            id,\n            inStock\n        }\n    }\n}`;\nconst techCategoryQuery = gql`query GetCategoryProducts{\n    category(input:{\n        title: \"tech\",\n    }){\n        products{\n            prices{\n                currency\n                amount\n            },\n            gallery,\n            id,\n            inStock\n        }\n    }\n}`;\n\nconst GetCategoryProducts = props => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(props.category === \"Clothes\" ? clothesCategoryQuery : techCategoryQuery);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 22\n  }, this);\n  var Products = [];\n  data.category.products.forEach(product => {\n    Products.push( /*#__PURE__*/_jsxDEV(Product, {\n      image: product.gallery[0],\n      name: product.id,\n      prices: product.prices,\n      currentCurrency: props.currency\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this));\n  });\n  document.querySelector(\"#catalog-container\").style.opacity = \"1\";\n  return Products;\n};\n\n_s(GetCategoryProducts, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = GetCategoryProducts;\n\nconst Catalog = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      id: \"category-button\",\n      onClick: () => {\n        props.changeCategory();\n      },\n      children: props.currentCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"catalog-container\",\n      children: /*#__PURE__*/_jsxDEV(GetCategoryProducts, {\n        category: props.currentCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}; // class Catalog extends Component{\n// const EXCHANGE_RATES = gql`\n//     query GetExchangeRates {\n//         category(input: clothes){\n//             name\n//         }\n//     }\n// `;\n// function ExchangeRates() {\n//     const { loading, error, data } = useQuery(EXCHANGE_RATES);\n//\n//     if (loading) return <p>Loading...</p>;\n//     if (error) return <p>Error :(</p>;\n//\n//     console.log(data)\n// }\n//     categoryQuery = gql`\n//     query GetCategoryProducts{\n//         category(input:{\n//             title: \"clothes\",\n//         }){\n//             products{\n//                 prices{\n//                     currency\n//                     amount\n//                 },\n//                 gallery,\n//                 id,\n//                 inStock\n//             }\n//         }\n//     }`\n//\n//     getCategoryProducts(){\n//         const {loading, error, data} = useQuery(this.categoryQuery)\n//\n//         if(loading) return <p>Loading...</p>\n//         if(error) return <p>Error...</p>\n//\n//         console.log(data)\n//     }\n//\n//     render() {\n//         return()\n//     }\n// }\n\n\n_c2 = Catalog;\nexport default Catalog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetCategoryProducts\");\n$RefreshReg$(_c2, \"Catalog\");","map":{"version":3,"sources":["D:/react/scandiwebproject/clothesshop/src/catalog/Catalog.js"],"names":["React","Component","Product","useQuery","gql","clothesCategoryQuery","techCategoryQuery","GetCategoryProducts","props","loading","error","data","category","Products","products","forEach","product","push","gallery","id","prices","currency","document","querySelector","style","opacity","Catalog","changeCategory","currentCategory"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACIC,QADJ,EAEIC,GAFJ,QAGO,gBAHP;;;AAKA,MAAMC,oBAAoB,GAAGD,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAdA;AAgBA,MAAME,iBAAiB,GAAGF,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAdA;;AAgBA,MAAMG,mBAAmB,GAAIC,KAAD,IAAS;AAAA;;AACjC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBR,QAAQ,CAACK,KAAK,CAACI,QAAN,KAAmB,SAAnB,GAA+BP,oBAA/B,GAAsDC,iBAAvD,CAAvC;AAGA,MAAGG,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEV,MAAIG,QAAQ,GAAG,EAAf;AACAF,EAAAA,IAAI,CAACC,QAAL,CAAcE,QAAd,CAAuBC,OAAvB,CAAgCC,OAAD,IAAW;AACtCH,IAAAA,QAAQ,CAACI,IAAT,eAAc,QAAC,OAAD;AAAS,MAAA,KAAK,EAAED,OAAO,CAACE,OAAR,CAAgB,CAAhB,CAAhB;AAAoC,MAAA,IAAI,EAAEF,OAAO,CAACG,EAAlD;AAAsD,MAAA,MAAM,EAAEH,OAAO,CAACI,MAAtE;AAA+F,MAAA,eAAe,EAAEZ,KAAK,CAACa;AAAtH,OAAmFL,OAAO,CAACG,EAA3F;AAAA;AAAA;AAAA;AAAA,YAAd;AACH,GAFD;AAIAG,EAAAA,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,EAA6CC,KAA7C,CAAmDC,OAAnD,GAA6D,GAA7D;AAEA,SAAOZ,QAAP;AACH,CAfD;;GAAMN,mB;UAC6BJ,Q;;;KAD7BI,mB;;AAiBN,MAAMmB,OAAO,GAAIlB,KAAD,IAAS;AACrB,sBAAO;AAAA,4BACH;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,EAAE,EAAC,iBAA9B;AAAgD,MAAA,OAAO,EAAE,MAAI;AAACA,QAAAA,KAAK,CAACmB,cAAN;AAAuB,OAArF;AAAA,gBAAwFnB,KAAK,CAACoB;AAA9F;AAAA;AAAA;AAAA;AAAA,YADG,eAGH;AAAS,MAAA,EAAE,EAAC,mBAAZ;AAAA,6BACI,QAAC,mBAAD;AAAqB,QAAA,QAAQ,EAAEpB,KAAK,CAACoB;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA,kBAAP;AAYH,CAbD,C,CAeA;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;MA/DMF,O;AAiEN,eAAeA,OAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\nimport Product from \"./Product\";\r\nimport {\r\n    useQuery,\r\n    gql\r\n} from \"@apollo/client\";\r\n\r\nconst clothesCategoryQuery = gql`query GetCategoryProducts{\r\n    category(input:{\r\n        title: \"clothes\",\r\n    }){\r\n        products{\r\n            prices{\r\n                currency\r\n                amount\r\n            },\r\n            gallery,\r\n            id,\r\n            inStock\r\n        }\r\n    }\r\n}`\r\n\r\nconst techCategoryQuery = gql`query GetCategoryProducts{\r\n    category(input:{\r\n        title: \"tech\",\r\n    }){\r\n        products{\r\n            prices{\r\n                currency\r\n                amount\r\n            },\r\n            gallery,\r\n            id,\r\n            inStock\r\n        }\r\n    }\r\n}`\r\n\r\nconst GetCategoryProducts = (props)=>{\r\n    const {loading, error, data} = useQuery(props.category === \"Clothes\" ? clothesCategoryQuery : techCategoryQuery)\r\n\r\n\r\n    if(loading) return <p>Loading...</p>\r\n    if(error) return <p>Error...</p>\r\n\r\n    var Products = []\r\n    data.category.products.forEach((product)=>{\r\n        Products.push(<Product image={product.gallery[0]} name={product.id} prices={product.prices} key={product.id} currentCurrency={props.currency}/>)\r\n    })\r\n\r\n    document.querySelector(\"#catalog-container\").style.opacity = \"1\"\r\n\r\n    return Products\r\n}\r\n\r\nconst Catalog = (props)=>{\r\n    return(<>\r\n        <button className=\"button\" id=\"category-button\" onClick={()=>{props.changeCategory()}}>{props.currentCategory}</button>\r\n\r\n        <section id=\"catalog-container\">\r\n            <GetCategoryProducts category={props.currentCategory}/>\r\n            {/*<Product id=\"test\" image=\"https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_2_720x.jpg?v=1612816087\" name=\"Apollo Running Short\" price=\"$50.00\"/>*/}\r\n            {/*<Product id=\"test\" image=\"https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_2_720x.jpg?v=1612816087\" name=\"test\" price=\"test\"/>*/}\r\n            {/*<Product id=\"test\" image=\"https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_2_720x.jpg?v=1612816087\" name=\"test\" price=\"test\"/>*/}\r\n            {/*<Product id=\"test\" image=\"https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_2_720x.jpg?v=1612816087\" name=\"test\" price=\"test\"/>*/}\r\n            {/*<Product id=\"test\" image=\"https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_2_720x.jpg?v=1612816087\" name=\"test\" price=\"test\"/>*/}\r\n        </section>\r\n    </>);\r\n}\r\n\r\n// class Catalog extends Component{\r\n\r\n    // const EXCHANGE_RATES = gql`\r\n//     query GetExchangeRates {\r\n//         category(input: clothes){\r\n//             name\r\n//         }\r\n//     }\r\n// `;\r\n\r\n// function ExchangeRates() {\r\n//     const { loading, error, data } = useQuery(EXCHANGE_RATES);\r\n//\r\n//     if (loading) return <p>Loading...</p>;\r\n//     if (error) return <p>Error :(</p>;\r\n//\r\n//     console.log(data)\r\n// }\r\n\r\n//     categoryQuery = gql`\r\n//     query GetCategoryProducts{\r\n//         category(input:{\r\n//             title: \"clothes\",\r\n//         }){\r\n//             products{\r\n//                 prices{\r\n//                     currency\r\n//                     amount\r\n//                 },\r\n//                 gallery,\r\n//                 id,\r\n//                 inStock\r\n//             }\r\n//         }\r\n//     }`\r\n//\r\n//     getCategoryProducts(){\r\n//         const {loading, error, data} = useQuery(this.categoryQuery)\r\n//\r\n//         if(loading) return <p>Loading...</p>\r\n//         if(error) return <p>Error...</p>\r\n//\r\n//         console.log(data)\r\n//     }\r\n//\r\n//     render() {\r\n//         return()\r\n//     }\r\n// }\r\n\r\nexport default Catalog"]},"metadata":{},"sourceType":"module"}