{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\scandiwebproject\\\\clothesshop\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache()\n}); // const EXCHANGE_RATES = gql`\n//     query GetExchangeRates {\n//         category(input: clothes){\n//             name\n//         }\n//     }\n// `;\n// function ExchangeRates() {\n//     const { loading, error, data } = useQuery(EXCHANGE_RATES);\n//\n//     if (loading) return <p>Loading...</p>;\n//     if (error) return <p>Error :(</p>;\n//\n//     console.log(data)\n// }\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My first Apollo app \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExchangeRates, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/react/scandiwebproject/clothesshop/src/index.js"],"names":["React","ReactDOM","reportWebVitals","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","cache","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,QAJJ,EAKIC,GALJ,QAMO,gBANP;;AAQA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC5BM,EAAAA,GAAG,EAAE,wBADuB;AAE5BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFqB,CAAjB,CAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASO,GAAT,GAAe;AACX,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KAPQA,G;AASTV,QAAQ,CAACW,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACI,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEJ,MAAxB;AAAA,2BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADF,EAMEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAZ,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    useQuery,\n    gql\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:4000/',\n    cache: new InMemoryCache()\n});\n\n// const EXCHANGE_RATES = gql`\n//     query GetExchangeRates {\n//         category(input: clothes){\n//             name\n//         }\n//     }\n// `;\n\n// function ExchangeRates() {\n//     const { loading, error, data } = useQuery(EXCHANGE_RATES);\n//\n//     if (loading) return <p>Loading...</p>;\n//     if (error) return <p>Error :(</p>;\n//\n//     console.log(data)\n// }\n\n\nfunction App() {\n    return (\n        <div>\n            <h2>My first Apollo app ðŸš€</h2>\n            <ExchangeRates />\n        </div>\n    );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n      <ApolloProvider client={client}>\n          <App/>\n      </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}