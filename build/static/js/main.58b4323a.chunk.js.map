{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","EXCHANGE_RATES","gql","ExchangeRates","useQuery","loading","error","data","console","log","App","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"iKAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+CCIRQ,EAAS,IAAIC,IAAa,CAC5BC,IAAK,yBACLC,MAAO,IAAIC,MAGTC,EAAiBC,YAAH,iIAQpB,SAASC,IACL,MAAiCC,YAASH,GAAlCI,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAExB,OAAIF,EAAgB,2CAChBC,EAAc,8CAElBE,QAAQC,IAAIF,GAIhB,SAASG,IACL,OACI,gCACI,kEACA,cAACP,EAAD,OAKZQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAACC,EAAA,EAAD,CAAgBlB,OAAQA,EAAxB,SACI,cAACc,EAAD,QAGRK,SAASC,eAAe,SAM1B7B,M","file":"static/js/main.58b4323a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    useQuery,\n    gql\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:4000/',\n    cache: new InMemoryCache()\n});\n\nconst EXCHANGE_RATES = gql`\n    query GetExchangeRates {\n        category(input: clothes){\n            name\n        }\n    }\n`;\n\nfunction ExchangeRates() {\n    const { loading, error, data } = useQuery(EXCHANGE_RATES);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    console.log(data)\n}\n\n\nfunction App() {\n    return (\n        <div>\n            <h2>My first Apollo app ðŸš€</h2>\n            <ExchangeRates />\n        </div>\n    );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n      <ApolloProvider client={client}>\n          <App/>\n      </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}